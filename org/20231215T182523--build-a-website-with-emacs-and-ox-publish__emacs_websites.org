#+title:      build a website with emacs and ox-publish
#+date:       [2023-12-15 Fri 18:25]
#+filetags:   :emacs:websites:
#+identifier: 20231215T182523
#+STARTUP:    overview

* Why build a website for notes anyway

I have a lot of notes. Over a few systems(at home, at work, under descriptions
of various projects).

So I wanted to gather everything in one place and somehow link them together.
It is also nice if I can share that with others. Also, as of [2023-12-16 Sat],
having everything about you/your way of working, etc written in one place, is a
perfect for AI systems to grab. All in one place, no need to scrape the whole
Internet. So the AI will for sure know how I like to work and my weak
spots(what I usually write here is what I just learned or don't want to
forget).

Also, of my notes are in .org files written in emacs, so of course my website
will also be written in Emacs([[file:20231215T140448--why-build-a-website-with-emacs-and-not-with-something-else__emacs_websites.org][more reasons why here]]). [[file:20231214T150411--inspirational-websites__emacs_websites.org][They also look nice and
clean and will last a lifetime]].


* chatgpt has changed my mind:

At first([2023-12-15 Fri]) I was thinking to write the blog with
org-static-blog, almost had it ready, all the notes exported to html.

#+begin_quote
The choice between using the default ox-publish functionality in Org Mode or
the org-static-blog package to create your Emacs website depends on your
specific requirements and preferences. Let's explore both options:

ox-publish in Org Mode:

Pros:

Flexibility: ox-publish is part of Org Mode and provides considerable
flexibility in customizing your website. You can define various publishing
options, including different output formats and configurations.

Integration: It seamlessly integrates with Org Mode, making it easy to manage
content directly within Emacs.

Customization: Allows extensive customization using Emacs Lisp, enabling you to
tailor your website to your preferences.

Cons:

Steep Learning Curve: Setting up and configuring ox-publish might have a
learning curve, especially if you're new to Emacs Lisp and detailed
configuration.

org-static-blog Package:

Pros:

Simplicity: org-static-blog is designed specifically for creating simple blogs
or websites using Org Mode. It's relatively straightforward to set up and use,
making it ideal if you want a quick solution.

Minimal Configuration: It requires minimal configuration, making it accessible
for beginners.

Focused Purpose: Primarily built for blogs, it might suit your needs if you're
looking for a straightforward blogging platform within Emacs.

Cons:

Limited Features: It might lack certain advanced features or customization
options compared to ox-publish, especially if you need more complex
functionality.

Less Flexible: As it's tailored for static blogs, if your website needs evolve
beyond blogging, you might face limitations.

Decision Factors:

Complexity vs. Simplicity: Consider how complex or simple you want your website
setup to be.

Customization Needs: Evaluate how much flexibility and customization options
you require for your website.

Future Growth: Consider whether your website's needs might expand beyond a blog
and if you need features beyond what a blogging-centric package provides.

Familiarity with Emacs Lisp: Assess your comfort level with Emacs Lisp, as
ox-publish might require more familiarity.

Recommendation:

If you prioritize simplicity, quick setup, and your website's focus is
primarily a blog, org-static-blog could be a good starting point.

If you foresee needing extensive customization, flexibility, or plan for
features beyond a blog, investing time in learning and using ox-publish might
be more beneficial in the long run.

Experiment with both to understand their functionalities and how they align
with your specific website goals. You can start with org-static-blog for a
quick setup and later explore ox-publish for more intricate customization and
flexibility if needed.
#+end_quote

Of course after readings this I leaned toward ox-publish instead of
org-static-blog. True, I have noticed that it lacks configuration options and
is kind of restraining. I read other people's tutorials on how they use
ox-publish and all the settings they have and I can not try to reuse them with
org-static-blog. Not nice..

Also there is this issue that I am facing today(re renders each post). -
https://github.com/bastibe/org-static-blog/issues/126

I just hope that tag feature works in ox-publish(it should) - then I am all
good. Let's dive in.

* some stuff related to org publish project alist

A list of guides how to build pages with ox-publish ir ox-html- https://pages.gitlab.io/org-mode/post3.html

Emacs docs - https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html

good nice example - https://taingram.org/blog/org-mode-blog.html

kaip creatinti naujus failus(org-structure-template-alist)

ir siaip nice full example of the config - https://ogbe.net/blog/blogging_with_org

System crafters example -
https://systemcrafters.net/publishing-websites-with-org-mode/building-the-site/

my github repo - https://github.com/arvydasg/org-publish-project-blog

codeacademy also?

use footnotes!!!

* Step by step implementation

** Read the official documentation

https://github.com/bastibe/org-static-blog

** Watch how it's being used

https://www.youtube.com/watch?v=Elynmb3kTE4

** Try with minimal configuration

take from the docs

** Previewing the generated site

how to implement - here https://systemcrafters.net/publishing-websites-with-org-mode/building-the-site/
** Modifications to the current one

make archive page to be index page? (can add intro with the index page code
block offered by org-static-blog)

what I would do and why

last modfied, etc - https://taingram.org/blog/org-mode-blog.html

date on the left of the post instead

check other notes what can be done

*** TODO pridek emacs config i bloga

O daryti tai gali taip manau - symlink i configa ir tiek. Check other guys
configs to remember what it means to have literate config ir pan.



*** TODO tags on the sidebar kaip cia:

https://manateelazycat.github.io/tags.html

solution:

https://github.com/bastibe/org-static-blog/issues/125

use some js? Mobile content atrodo labai nice taip pat.

** Add css!

css, publishing method, last modfied, etc -
https://taingram.org/blog/org-mode-blog.html

Org's HTML exporter makes it easy to create your own style sheet. The exported
HTML makes sensible use of standard tags as well as specifying number of
classes documented under [[https://orgmode.org/manual/CSS-support.html][CSS Support in the Org manual]]. For my site I wrote my
own style sheet and linked it with:

:html-head "<link rel=\"stylesheet\" href=\"/style.css\" type=\"text/css\"/>"
The :html-head option lets you add any arbitrary HTML to the head tag.

try to use custom themes - try use the custom themes zinai. Tos special,
grazios, tiesiog tutorial.

*** TODO paziurek style ideju cia
https://magit.vc/manual/magit/Sparse-checkouts.html

*** TODO take some css ideas look into this, previous attempt to blog with emacs

https://github.com/arvydasg/emacs_blog


** head/index/Preamble/postamble

add #+OPTIONS: ^:nil to all files

and write a post about it how it looks wiht and without

https://emacs.stackexchange.com/questions/10549/org-mode-how-to-export-underscore-as-underscore-instead-of-highlight-in-html

*** TODO create a proper footer and put github link there


geras wording ka kas ka reiskai is cia, copy:

https://taingram.org/blog/org-mode-blog.html

nice footer and more? - https://ict4g.net/adolfo/notes/emacs/linking-my-html-pages-to-source-code.html

** Org download for images

org download inkomponuok kad naudotumei bloge images

#+BEGIN_EXPORT html
<figure>
  <img src="./static/images/1.png" alt="1.png" width="600px">
</figure>
#+END_EXPORT

** add lightbox

kaip jau esi dares, kaip images ikelti, kokie settingsai, kaip graziai kad
atsivaizduotu, ir pan.

SEPARATE page!

https://github.com/arvydasg/arvydasg.github.io/blob/master/static/style.css +
js code

** how to add google tag manager

google analytics gali buti playsible! - add analytics with [[https://plausible.io/privacy-focused-web-analytics][plausible]] like [[https://systemcrafters.net/privacy-policy/][David
example ]] choose one. probs plausible

add google tag manageri kad matyti aktyvuma, jau buvai dares cia:

https://github.com/arvydasg/dotfiles/blob/20231124-Before-denote/my-init.org#org-static-blog



also separate page

add google tag manager also -
https://github.com/arvydasg/dotfiles/blob/20231124-Before-denote/my-init.org#org-static-blog

** paziurek kaip dar gali pritempti prie sito:

mainly inspired by this - http://tips.defun.work/blog.html

** publishing posibilities

with tramp etc rsync - https://taingram.org/blog/org-mode-blog.html

or manually with git - add link i savo not

automatically wiht git kaip cia - https://ravi.pro/blog/blogging-with-emacs-org-mode.html

** Extras

*** short and clean links like here

https://diego.codes/post/blogging-with-org/

*** TODO presentation mode?
https://orgmode.org/worg/code/org-info-js/index.html#undefined

this guy uses it -
https://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html

"As I use org-info.js and track Worg git, I use "inherit-org-info-js" in all my
org projects:"

*** TODO check this? automatic publishing?

separate post!

https://systemcrafters.net/publishing-websites-with-org-mode/automated-site-publishing/

https://systemcrafters.net/publishing-websites-with-org-mode/building-the-site/

In the next video Iâ€™ll show you how to automatically publish an Org-based
website to Git hosting services like GitHub Pages and Sourcehut Pages!

** TODO add your own website into readme of org-static-blog, make a commit

so you get recognized you know

** TODO search function like [[https://docs.projectile.mx/projectile/installation.html][here ]]


** fix a bug
*** TODO why the hell some posts always get updated after I publish a change on one post?

tags and rss and archive - I understand, but basic posts? why? Is it because of
the 5 most recent posts limit or what?

* TODO go over TODO keywords in blog notes

see what has to be done, added, etc
