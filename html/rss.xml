<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[arvydasg.github.io]]></title>
<description><![CDATA[arvydasg.github.io]]></description>
<link>https://arvydasg.github.io/devnotes/html</link>
<lastBuildDate>Thu, 14 Dec 2023 13:03:33 +0000</lastBuildDate>
<item>
  <title><![CDATA[my dev environment]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org45e548a">1. <span class="todo TODO">TODO</span> apie my computer setup</a></li>
</ul>
</div>
</nav>

<div id="outline-container-org45e548a" class="outline-2">
<h2 id="org45e548a"><span class="section-number-2">1.</span> <span class="todo TODO">TODO</span> apie my computer setup</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>windows</li>
<li>wsl nixos</li>
<li>etc</li>
<li><a href="20231130T065309--fetch-and-pull-changes-automatically__git_wsl.html">kokie scriptai runina automatically</a></li>
<li>kaip darau savo bloga ir pan(yep)</li>
<li>kaip takinu notes(denote)</li>
<li>kaip codinu(vscode or emacs?)</li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-scripting.html">scripting</a> <a href="https://arvydasg.github.io/devnotes/html/tag-wsl.html">wsl</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[scripting]]></category>
  <category><![CDATA[wsl]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231214T105653--my-dev-environment__git_scripting_wsl.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231214T105653--my-dev-environment__git_scripting_wsl.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[setup custom domain for github pages]]></title>
  <description><![CDATA[
<p>
This video below has a good explanation - <a href="https://www.youtube.com/watch?v=rKz6kIW4Uos&amp;ab_channel=MichaelSolorio">https://www.youtube.com/watch?v=rKz6kIW4Uos&amp;ab_channel=MichaelSolorio</a>
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-websites.html">websites</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[websites]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231214T094426--setup-custom-domain-for-github-pages__git_websites.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231214T094426--setup-custom-domain-for-github-pages__git_websites.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[authenticate to git with gpg key]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#orgbfec543">1. <span class="todo TODO">TODO</span> gpg key method</a></li>
</ul>
</div>
</nav>

<div id="outline-container-orgbfec543" class="outline-2">
<h2 id="orgbfec543"><span class="section-number-2">1.</span> <span class="todo TODO">TODO</span> gpg key method</h2>
<div class="outline-text-2" id="text-1">
<p>
Colleague gave some tutorials in work notes.
</p>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-gpg.html">gpg</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[gpg]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231214T061312--authenticate-to-git-with-gpg-key__git_gpg.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231214T061312--authenticate-to-git-with-gpg-key__git_gpg.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[authenticate to git with personal access token]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#orgbeef263">1. Personal access token</a></li>
<li><a href="#org7f8eb0a">2. Misc info</a></li>
</ul>
</div>
</nav>

<div id="outline-container-orgbeef263" class="outline-2">
<h2 id="orgbeef263"><span class="section-number-2">1.</span> Personal access token</h2>
<div class="outline-text-2" id="text-1">
<p>
After you have <a href="20231211T161252--introduce-yourself-to-git__git.html">introduced yourself to git</a>.
</p>

<p>
When you do a git operation(with magit or just from the terminal) you will be
prompted for password. One way is to get with a generated <code>personal access
token</code> in github developer settings.
</p>

<p>
Go generate that token, save it somewhere safe.
</p>

<p>
Then in the terminal do:
</p>

<div class="org-src-container">
<pre class="src src-bash">git config --global --replace-all credential.helper cache
git config --global credential.helper store
</pre>
</div>

<p>
Now try to push the code, enter your git username as username and enter the
token that you have generated as password.
</p>

<p>
Git will remember your credentials for future git operations.
</p>
</div>
</div>

<div id="outline-container-org7f8eb0a" class="outline-2">
<h2 id="org7f8eb0a"><span class="section-number-2">2.</span> Misc info</h2>
<div class="outline-text-2" id="text-2">
<p>
Changing the token - <a href="https://stackoverflow.com/questions/46645843/where-to-store-my-git-personal-access-token">Explanation here</a>.
</p>

<div class="org-src-container">
<pre class="src src-bash">git config --list (some info about you)
</pre>
</div>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231214T060637--authenticate-to-git-with-personal-access-token__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231214T060637--authenticate-to-git-with-personal-access-token__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[authenticate to git with ssh]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org33b4132">1. <span class="todo TODO">TODO</span> ssh key method</a></li>
</ul>
</div>
</nav>

<div id="outline-container-org33b4132" class="outline-2">
<h2 id="org33b4132"><span class="section-number-2">1.</span> <span class="todo TODO">TODO</span> ssh key method</h2>
<div class="outline-text-2" id="text-1">
<p>
I have described it in work notes.
</p>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-ssh.html">ssh</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[ssh]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231214T060558--authenticate-to-git-with-ssh__git_ssh.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231214T060558--authenticate-to-git-with-ssh__git_ssh.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[deploy a static website with github pages]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#orgc253a5b">1. Create the main <code>username.github.io</code> page</a></li>
<li><a href="#orgd51c29c">2. Create <code>subpages</code> for <code>username.github.io</code></a></li>
</ul>
</div>
</nav>

<div id="outline-container-orgc253a5b" class="outline-2">
<h2 id="orgc253a5b"><span class="section-number-2">1.</span> Create the main <code>username.github.io</code> page</h2>
<div class="outline-text-2" id="text-1">
<p>
The idea is - you have lot's of html pages(or a single html page).
</p>

<p>
You add it(them) to github repo which is named
<code>&lt;yourgithubusername@github.io&gt;</code>. In my case -
<a href="https://github.com/arvydasg/arvydasg.github.io">https://github.com/arvydasg/arvydasg.github.io</a>.
</p>

<p>
Then in <code>repo settings -&gt; pages</code> you specify that you want master branch to be
deployed to github pages. After a few minutes you can go to
<code>&lt;yourgithubusername@github.io&gt;</code>. In my case it is <a href="https://arvydasg.github.io/">https://arvydasg.github.io/</a>.
Wait 5 minutes, do a hard browser refresh and you should see the page.
</p>

<p>
If I have a domain name, I can then specify it in repo settings as well. In my
case it is <code>arvydas.dev</code>. You might need to do some configuration on domain
side also to link to github. Probably <a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site">this</a> guide could help with that.
</p>
</div>
</div>

<div id="outline-container-orgd51c29c" class="outline-2">
<h2 id="orgd51c29c"><span class="section-number-2">2.</span> Create <code>subpages</code> for <code>username.github.io</code></h2>
<div class="outline-text-2" id="text-2">
<p>
So you have <code>&lt;yourgithubusername@github.io&gt;</code> website up and running. But you
want to deploy another page. You can do that by creating another repo(any name
now, for example a repo called <code>teddybears</code>), repo settings -&gt; pages and choose
master branch, save, save and after 5 minutes or so it will display the
contents of your teddybears repo under
<code>&lt;yourgithubusername@github.io/teddybears&gt;</code>.
</p>

<p>
I have codeacademy setup this way - <a href="https://github.com/arvydasg/codeacademy">https://github.com/arvydasg/codeacademy</a>
Also devnotes - <a href="https://arvydas.dev/devnotes/html">https://arvydas.dev/devnotes/html</a>
</p>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-websites.html">websites</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[websites]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231212T123552--deploy-a-static-website-with-github-pages__git_websites.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231212T123552--deploy-a-static-website-with-github-pages__git_websites.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[introduce yourself to git]]></title>
  <description><![CDATA[
<p>
When on new system, you might get such message when trying to perform a
push/pull git command:
</p>

<blockquote>
<p>
Author identity unknown
</p>

<p>
Please tell me who you are.
</p>

<p>
Run
</p>

<p>
git config &#x2013;global user.email "you@example.com"
</p>

<p>
git config &#x2013;global user.name "Your Name"
</p>
</blockquote>

<p>
In my case that would be:
</p>

<div class="org-src-container">
<pre class="src src-bash">git config --global user.email "azegaspa@gmail.com"
git config --global user.name "arvydasg"
</pre>
</div>

<p>
You will get prompted for a password.
</p>

<p>
There are multiple ways to get that password:
</p>
<ul class="org-ul">
<li>write your git password manually each time</li>
<li><a href="20231214T060637--authenticate-to-git-with-personal-access-token__git.html">authenticate with personal access token</a></li>
<li><a href="20231214T060558--authenticate-to-git-with-ssh__git_ssh.html">authenticate with ssh</a></li>
<li><a href="20231214T061312--authenticate-to-git-with-gpg-key__git_gpg.html">authenticate with gpg</a></li>
</ul>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231211T161252--introduce-yourself-to-git__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231211T161252--introduce-yourself-to-git__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[fetch and pull changes automatically]]></title>
  <description><![CDATA[
<p>
This is mainly important when you are working ont he same repo on two different
machines. You make changes on one, then login to another one - you must always
rememebr to pull those changes, otherwise if you make your own - you will get
into merge conflicst. And as of <span class="timestamp-wrapper"><span class="timestamp">[2023-12-14 Thu] </span></span> I am not so good at solving
those. So I try to avoid them as much as possible.
</p>

<p>
This is the reason I am creating this script that will automatically run <code>git
fetch &amp;&amp; git pull</code> that command for me whenever I turn on the WSL.
</p>

<p>
The script example:
</p>

<div class="org-src-container">
<pre class="src src-bash">#!/bin/bash
REPO_DIR="$HOME/GIT/notes/"

function auto-fetch-pull() {
    if [ -d "$1" ]; then
        cd "$1" || exit
        echo "Fetching latest changes..."
        git fetch
        echo "Pulling changes into your branch..."
        git pull
    else
        echo "Directory '$1' not found."
    fi
}

auto-fetch-pull "$REPO_DIR"
</pre>
</div>

<p>
Ensure the script has execute permissions:
</p>
<div class="org-src-container">
<pre class="src src-bash">chmod +x auto_fetch_pull.sh
</pre>
</div>

<p>
Then, try running the script:
</p>
<div class="org-src-container">
<pre class="src src-bash">./auto_fetch_pull.sh
</pre>
</div>

<p>
Add the script execution to your .bashrc
</p>
<div class="org-src-container">
<pre class="src src-bash">echo '~/.emacs.d/MISC/auto_fetch_pull.sh' &gt;&gt; ~/.bashrc
</pre>
</div>

<p>
Each time WSL (or any other linux distribution launches) launches, one of the
thing it does that concern us in this case, is it runs <code>source .bashrc</code>.
Basically evaluates and applies everything that it sees in <code>.bashrc</code> file. And
since we have conveniently placed our script into .bashrc with the last
command - it will run the script each time WSL is launched.
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-wsl.html">wsl</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[wsl]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231130T065309--fetch-and-pull-changes-automatically__git_wsl.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231130T065309--fetch-and-pull-changes-automatically__git_wsl.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[can not see branches]]></title>
  <description><![CDATA[
<p>
If after a fresh repo clone you can not see other git branches besides the main
one - do:
</p>

<p>
<code>git checkout &lt;branchname&gt;</code>
</p>

<p>
Or in magit, to see all the branches - do y(magit-show-refs)
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T221917--can-not-see-branches__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T221917--can-not-see-branches__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[reset changes]]></title>
  <description><![CDATA[
<nav id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#org54333f7">1. git clean -nd</a></li>
<li><a href="#org4d6bb3a">2. git clean -fd</a></li>
<li><a href="#org94eaa65">3. git reset &#x2013;hard HEAD</a></li>
</ul>
</div>
</nav>
<p>
Useful to know these commands when you are on a production server for
example, not having magit or Git desktop thing.
</p>

<div id="outline-container-org54333f7" class="outline-2">
<h2 id="org54333f7"><span class="section-number-2">1.</span> git clean -nd</h2>
<div class="outline-text-2" id="text-1">
<div class="org-src-container">
<pre class="src src-bash">git clean -nd
</pre>
</div>

<p>
This command is a dry run of the git clean command. It's used to preview what
files will be removed from the working directory. The flags used here are:
</p>

<p>
<code>-n</code>: Performs a dry run, which means it shows what files would be deleted
without actually deleting them.
</p>

<p>
<code>-d</code>: Tells Git to also remove untracked directories along with untracked
files.
</p>

<p>
Running <code>git clean -nd</code> will display a list of files and directories that are
currently untracked in the repository and would be removed if the command were
executed without the <code>-n</code> flag.
</p>
</div>
</div>

<div id="outline-container-org4d6bb3a" class="outline-2">
<h2 id="org4d6bb3a"><span class="section-number-2">2.</span> git clean -fd</h2>
<div class="outline-text-2" id="text-2">
<div class="org-src-container">
<pre class="src src-bash">git clean -fd
</pre>
</div>

<p>
<code>git clean -fd</code>: This command is used to forcefully remove untracked files and
directories from the working directory. The flags used here are:
</p>

<p>
<code>-f</code>: Stands for "force" and is used to perform the clean operation without
prompting for confirmation.
</p>

<p>
<code>-d</code>: Tells Git to also remove untracked directories along with untracked
files.
</p>

<p>
Running <code>git clean -fd</code> will permanently delete all untracked files and
directories in the repository. Be cautious while using this command as it
irreversibly removes files and directories that are not tracked by Git.
</p>
</div>
</div>

<div id="outline-container-org94eaa65" class="outline-2">
<h2 id="org94eaa65"><span class="section-number-2">3.</span> git reset &#x2013;hard HEAD</h2>
<div class="outline-text-2" id="text-3">
<div class="org-src-container">
<pre class="src src-bash">git reset --hard HEAD
</pre>
</div>

<p>
<code>git reset --hard HEAD</code>: This command resets the current branch to the state of
the HEAD commit. Here's what each part does:
</p>

<p>
git reset: Resets the current HEAD to the specified state.
</p>

<p>
<code>--hard</code>: Indicates a hard reset, which means it not only changes the HEAD to
the specified commit but also resets the index and working directory to match
that commit.
</p>

<p>
<code>HEAD</code>: Refers to the latest commit of the current branch.
</p>

<p>
Running <code>git reset --hard HEAD</code> will discard all changes in the working
directory and index, reverting them to the state of the latest commit on the
current branch. Be careful when using git reset &#x2013;hard as it can discard all
uncommitted changes irretrievably.
</p>
</div>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T221653--reset-changes__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T221653--reset-changes__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[seq keep error message in emacs]]></title>
  <description><![CDATA[
<p>
<a href="https://emacs.stackexchange.com/questions/78977/seq-keep-is-void-when-installing-magit-through-use-package">https://emacs.stackexchange.com/questions/78977/seq-keep-is-void-when-installing-magit-through-use-package</a>
</p>

<p>
should install emacs 29 bla
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-emacs.html">emacs</a> <a href="https://arvydasg.github.io/devnotes/html/tag-magit.html">magit</a> </div>]]></description>
  <category><![CDATA[emacs]]></category>
  <category><![CDATA[magit]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T220943--seq-keep-error-message-in-emacs__emacs_magit.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T220943--seq-keep-error-message-in-emacs__emacs_magit.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[partial clone]]></title>
  <description><![CDATA[
<p>
<a href="https://magit.vc/manual/magit/Sparse-checkouts.html">https://magit.vc/manual/magit/Sparse-checkouts.html</a>
</p>

<p>
Useful when I wanted to clone only one dir at work from my personal
org notes directory.
</p>

<ul class="org-ul">
<li>go to src folder and do <code>m-x magit-clone-sparse</code></li>
<li>investigate the .git folder, see the content and watch how it updates in next
steps</li>
<li><code>m-x magit sparse checkout enable</code> (see the changes)</li>
<li>inside info folder sparse-checkout appeared</li>
<li>config and index also changed</li>
<li><code>c-x g</code> - go to magit interface</li>
<li>do <code>&gt;</code></li>
<li><code>s</code> to set directories(tab to select)</li>
<li>needed directory is fetched. MAGIC!</li>
<li>if you do <code>s</code> again to change dirs - old dir gets removed :o</li>
</ul>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-magit.html">magit</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[magit]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T220901--partial-clone__git_magit.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T220901--partial-clone__git_magit.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[copy a repo with all commit history]]></title>
  <description><![CDATA[
<p>
The commands provided below are used to push all local branches, tags, and
commits from one Git repository to another repository.
</p>

<p>
For instance, if the new repository is located in a directory named new<sub>repo</sub>,
you'd execute:
</p>

<div class="org-src-container">
<pre class="src src-bash">cd /path/to/new_repo
</pre>
</div>

<p>
<code>git push --mirror &lt;url of old repo&gt;</code>: This Git command pushes all branches,
tags, and commits from the current repository (in the changed directory) to
another repository specified by &lt;url of old repo&gt;. The <code>--mirror</code> flag is used
to ensure that all references (branches and tags) and associated objects are
pushed to the remote repository.
</p>

<p>
Replace <code>&lt;url of old repo&gt;</code> with the URL or remote repository location of the
old repository.
</p>

<p>
For example:
</p>

<div class="org-src-container">
<pre class="src src-bash">git push --mirror https://github.com/old_username/old_repo.git
</pre>
</div>

<p>
This sequence of commands, after changing the directory to the new repository,
essentially mirrors the content of the old repository, including all branches,
tags, commits, and their associated history, to the new repository specified by
<code>&lt;url of old repo&gt;</code>.
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T220538--copy-a-repo-with-all-commit-history__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T220538--copy-a-repo-with-all-commit-history__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[revert a commit with magit]]></title>
  <description><![CDATA[
<p>
<a href="https://www.youtube.com/watch?v=7D4cV0aodGw&amp;ab_channel=whatacold">best explanation</a> at 3:55
</p>

<div class="org-src-container">
<pre class="src src-bash"># open magit
C-x g -
# open log
l l
# select the commits
C-space n/p
# revert the commits
V V
</pre>
</div>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> <a href="https://arvydasg.github.io/devnotes/html/tag-magit.html">magit</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <category><![CDATA[magit]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T214132--revert-a-commit__git_magit.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T214132--revert-a-commit__git_magit.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
<item>
  <title><![CDATA[split a github repository into multiple]]></title>
  <description><![CDATA[
<p>
Can do that with commit history like so -
<a href="https://www.youtube.com/watch?v=HV8hfmwDlPY&amp;ab_channel=CraigDavison">https://www.youtube.com/watch?v=HV8hfmwDlPY&amp;ab_channel=CraigDavison</a>
</p>
<div class="taglist"><a href="https://arvydasg.github.io/devnotes/html/tags.html">Tags</a>: <a href="https://arvydasg.github.io/devnotes/html/tag-git.html">git</a> </div>]]></description>
  <category><![CDATA[git]]></category>
  <link>https://arvydasg.github.io/devnotes/html/20231125T190641--split-a-github-repository-into-multiple__git.html</link>
  <guid>https://arvydasg.github.io/devnotes/html/20231125T190641--split-a-github-repository-into-multiple__git.html</guid>
  <pubDate>Thu, 14 Dec 2023 13:03:33 +0000</pubDate>
</item>
</channel>
</rss>
